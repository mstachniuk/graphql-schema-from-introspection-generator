buildscript {
//    ext.kotlin_version = '1.4.32'
    ext.junitVersion = "5.2.0"
//    ext.dokka_version = '0.9.17'

    repositories {
        mavenCentral()
    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:org.jetbrains.kotlin.jvm:$kotlin_version"
//        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
//    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.32"
    id "org.jetbrains.dokka" version "0.9.17"
    id "jacoco"
}

description = 'Generate GraphQL Schema (GraphQL DSL or SDL) based on introspection query result'

configurations {
    ktlint
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'com.beust:klaxon:5.5'
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile 'org.json:json:20180813'
    testCompile 'com.graphql-java:graphql-java:9.0'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    ktlint "com.pinterest:ktlint:0.41.0"
}

// graphql-java:
// 8.0 directives are NOT visible in introspection query
// 9.0 directives are visible in introspection query

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
    jacoco {
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/docs/javadoc"
    // suppress internal package
    packageOptions {
        prefix = "io.github.mstachniuk.graphqlschemafromintrospectiongenerator.internal"
        suppress = true
    }
}
javadoc.dependsOn dokka

jacoco {
    toolVersion = "0.8.1"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

build.dependsOn jacocoTestReport
